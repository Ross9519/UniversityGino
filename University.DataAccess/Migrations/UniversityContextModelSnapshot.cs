// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using University.DataAccess;

#nullable disable

namespace University.DataAccess.Migrations
{
    [DbContext(typeof(UniversityContext))]
    partial class UniversityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("University.DataAccess.Models.Exam", b =>
                {
                    b.Property<long>("StudentId")
                        .HasColumnType("bigint")
                        .HasColumnName("student_id");

                    b.Property<long>("ProfessorId")
                        .HasColumnType("bigint")
                        .HasColumnName("professor_id");

                    b.Property<long>("SubjectId")
                        .HasColumnType("bigint")
                        .HasColumnName("subject_id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("exam_date");

                    b.Property<int>("Grade")
                        .HasColumnType("int")
                        .HasColumnName("exam_grade");

                    b.HasKey("StudentId", "ProfessorId", "SubjectId");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("SubjectId");

                    b.ToTable("exam");

                    b.HasData(
                        new
                        {
                            StudentId = 1L,
                            ProfessorId = 1L,
                            SubjectId = 1L,
                            Date = new DateTime(2024, 5, 5, 21, 18, 27, 927, DateTimeKind.Local).AddTicks(2123),
                            Grade = 85
                        },
                        new
                        {
                            StudentId = 1L,
                            ProfessorId = 2L,
                            SubjectId = 2L,
                            Date = new DateTime(2024, 4, 14, 21, 18, 27, 932, DateTimeKind.Local).AddTicks(6872),
                            Grade = 78
                        },
                        new
                        {
                            StudentId = 2L,
                            ProfessorId = 1L,
                            SubjectId = 1L,
                            Date = new DateTime(2024, 3, 24, 21, 18, 27, 932, DateTimeKind.Local).AddTicks(6924),
                            Grade = 92
                        },
                        new
                        {
                            StudentId = 2L,
                            ProfessorId = 2L,
                            SubjectId = 3L,
                            Date = new DateTime(2024, 3, 3, 21, 18, 27, 932, DateTimeKind.Local).AddTicks(6929),
                            Grade = 89
                        },
                        new
                        {
                            StudentId = 3L,
                            ProfessorId = 1L,
                            SubjectId = 2L,
                            Date = new DateTime(2024, 2, 11, 21, 18, 27, 932, DateTimeKind.Local).AddTicks(6932),
                            Grade = 75
                        });
                });

            modelBuilder.Entity("University.DataAccess.Models.OfficeStaff", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("staff_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("FiscalCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("fiscal_code");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("TelephoneNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("telephone_no");

                    b.HasKey("Id");

                    b.ToTable("office_staff");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            Address = "123 Main St",
                            FirstName = "Alice",
                            FiscalCode = "ABC123",
                            LastName = "Jones",
                            TelephoneNo = "555-1234"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            Address = "456 Oak St",
                            FirstName = "Bob",
                            FiscalCode = "DEF456",
                            LastName = "Smith",
                            TelephoneNo = "555-5678"
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            Address = "789 Elm St",
                            FirstName = "Carol",
                            FiscalCode = "GHI789",
                            LastName = "Brown",
                            TelephoneNo = "555-9012"
                        },
                        new
                        {
                            Id = 4L,
                            Active = false,
                            Address = "012 Pine St",
                            FirstName = "David",
                            FiscalCode = "JKL012",
                            LastName = "Wilson"
                        },
                        new
                        {
                            Id = 5L,
                            Active = true,
                            Address = "345 Cedar St",
                            FirstName = "Eva",
                            FiscalCode = "MNO345",
                            LastName = "Marquez",
                            TelephoneNo = "555-3456"
                        });
                });

            modelBuilder.Entity("University.DataAccess.Models.Professor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("professor_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("FiscalCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("fiscal_code");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name");

                    b.Property<long?>("SubjectId")
                        .HasMaxLength(100)
                        .HasColumnType("bigint")
                        .HasColumnName("subject_id");

                    b.Property<string>("TelephoneNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("telephone_no");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId")
                        .IsUnique()
                        .HasFilter("[subject_id] IS NOT NULL");

                    b.ToTable("professor");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            Address = "123 Main St",
                            FirstName = "John",
                            FiscalCode = "ABC123",
                            LastName = "Doe",
                            SubjectId = 1L,
                            TelephoneNo = "555-1234"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            Address = "456 Oak St",
                            FirstName = "Jane",
                            FiscalCode = "DEF456",
                            LastName = "Smith",
                            SubjectId = 2L,
                            TelephoneNo = "555-5678"
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            Address = "789 Elm St",
                            FirstName = "Michael",
                            FiscalCode = "GHI789",
                            LastName = "Johnson",
                            SubjectId = 3L,
                            TelephoneNo = "555-9012"
                        },
                        new
                        {
                            Id = 4L,
                            Active = false,
                            Address = "012 Pine St",
                            FirstName = "Emily",
                            FiscalCode = "JKL012",
                            LastName = "Brown",
                            SubjectId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Active = true,
                            Address = "345 Cedar St",
                            FirstName = "Daniel",
                            FiscalCode = "MNO345",
                            LastName = "Wilson",
                            SubjectId = 5L,
                            TelephoneNo = "555-3456"
                        });
                });

            modelBuilder.Entity("University.DataAccess.Models.Student", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("student_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("FiscalCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("fiscal_code");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("StudentNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("student_no");

                    b.Property<string>("TelephoneNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("telephone_no");

                    b.HasKey("Id");

                    b.ToTable("student");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            Address = "123 Main St",
                            FirstName = "Alice",
                            FiscalCode = "ABC123",
                            LastName = "Smith",
                            StudentNo = "STU001",
                            TelephoneNo = "555-1234"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            Address = "456 Oak St",
                            FirstName = "Bob",
                            FiscalCode = "DEF456",
                            LastName = "Johnson",
                            StudentNo = "STU002",
                            TelephoneNo = "555-5678"
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            Address = "789 Elm St",
                            FirstName = "Charlie",
                            FiscalCode = "GHI789",
                            LastName = "Brown",
                            StudentNo = "STU003",
                            TelephoneNo = "555-9012"
                        },
                        new
                        {
                            Id = 4L,
                            Active = false,
                            Address = "012 Pine St",
                            FirstName = "Diana",
                            FiscalCode = "JKL012",
                            LastName = "Wilson",
                            StudentNo = "STU004"
                        },
                        new
                        {
                            Id = 5L,
                            Active = true,
                            Address = "345 Cedar St",
                            FirstName = "Eva",
                            FiscalCode = "MNO345",
                            LastName = "Garcia",
                            StudentNo = "STU005",
                            TelephoneNo = "555-3456"
                        });
                });

            modelBuilder.Entity("University.DataAccess.Models.StudyPlan", b =>
                {
                    b.Property<long>("StudentId")
                        .HasColumnType("bigint")
                        .HasColumnName("student_id");

                    b.Property<long>("SubjectId")
                        .HasColumnType("bigint")
                        .HasColumnName("subject_id");

                    b.HasKey("StudentId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("student_subject");

                    b.HasData(
                        new
                        {
                            StudentId = 1L,
                            SubjectId = 1L
                        },
                        new
                        {
                            StudentId = 1L,
                            SubjectId = 2L
                        },
                        new
                        {
                            StudentId = 2L,
                            SubjectId = 1L
                        },
                        new
                        {
                            StudentId = 2L,
                            SubjectId = 3L
                        },
                        new
                        {
                            StudentId = 3L,
                            SubjectId = 2L
                        });
                });

            modelBuilder.Entity("University.DataAccess.Models.Subject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("subject_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("HoursNo")
                        .HasColumnType("int")
                        .HasColumnName("hours_no");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("subject_name");

                    b.Property<long>("ProfessorId")
                        .HasColumnType("bigint")
                        .HasColumnName("professor_id");

                    b.HasKey("Id");

                    b.ToTable("subject");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            HoursNo = 4,
                            Name = "Mathematics",
                            ProfessorId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            HoursNo = 3,
                            Name = "Physics",
                            ProfessorId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            HoursNo = 3,
                            Name = "Chemistry",
                            ProfessorId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            HoursNo = 3,
                            Name = "Biology",
                            ProfessorId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            HoursNo = 2,
                            Name = "English Literature",
                            ProfessorId = 5L
                        });
                });

            modelBuilder.Entity("University.DataAccess.Models.Exam", b =>
                {
                    b.HasOne("University.DataAccess.Models.Professor", "Professor")
                        .WithMany("Exams")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("University.DataAccess.Models.Student", "Student")
                        .WithMany("Exams")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("University.DataAccess.Models.Subject", "Subject")
                        .WithMany("Exams")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Professor");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("University.DataAccess.Models.Professor", b =>
                {
                    b.HasOne("University.DataAccess.Models.Subject", "Subject")
                        .WithOne("Professor")
                        .HasForeignKey("University.DataAccess.Models.Professor", "SubjectId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("University.DataAccess.Models.StudyPlan", b =>
                {
                    b.HasOne("University.DataAccess.Models.Student", "Student")
                        .WithMany("StudyPlans")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("University.DataAccess.Models.Subject", "Subject")
                        .WithMany("StudyPlans")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("University.DataAccess.Models.Professor", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("University.DataAccess.Models.Student", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("StudyPlans");
                });

            modelBuilder.Entity("University.DataAccess.Models.Subject", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("Professor");

                    b.Navigation("StudyPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
